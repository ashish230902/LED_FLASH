

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 16:52:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 29/04/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F27J53 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTBbits	set	3969
    49  0000                     _SSPBUF	set	4041
    50  0000                     _ADCON1	set	4033
    51  0000                     _ADCON0	set	4034
    52  0000                     _PIR1bits	set	3998
    53  0000                     _SSPCON1	set	4038
    54  0000                     _SSPSTAT	set	4039
    55  0000                     _TRISCbits	set	3988
    56  0000                     _TRISAbits	set	3986
    57  0000                     _TRISBbits	set	3987
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  01FF28                     __pcinit:
    63                           	callstack 0
    64  01FF28                     start_initialization:
    65                           	callstack 0
    66  01FF28                     __initialization:
    67                           	callstack 0
    68  01FF28                     end_of_initialization:
    69                           	callstack 0
    70  01FF28                     __end_of__initialization:
    71                           	callstack 0
    72  01FF28  0100               	movlb	0
    73  01FF2A  EFB1  F0FF         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	callstack 0
    78  000001                     ??_main:
    79                           
    80                           ; 1 bytes @ 0x0
    81  000001                     	ds	2
    82  000003                     main@i:
    83                           	callstack 0
    84                           
    85                           ; 2 bytes @ 0x2
    86  000003                     	ds	2
    87  000005                     main@x:
    88                           	callstack 0
    89                           
    90                           ; 1 bytes @ 0x4
    91  000005                     	ds	1
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 54 in file "SPI_Slave.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;  i               2    2[COMRAM] int 
   103 ;;  x               1    4[COMRAM] unsigned char 
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   117 ;;Total ram usage:        5 bytes
   118 ;; Hardware stack levels required when called:    1
   119 ;; This function calls:
   120 ;;		_SPIS_Read
   121 ;;		_SPI_Init_Slave
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  01FF62                     __ptext0:
   129                           	callstack 0
   130  01FF62                     _main:
   131                           	callstack 30
   132  01FF62                     
   133                           ;SPI_Slave.c: 56:     SPI_Init_Slave();
   134  01FF62  ECA2  F0FF         	call	_SPI_Init_Slave	;wreg free
   135  01FF66                     
   136                           ;SPI_Slave.c: 57:     for(int i=0;i<2;i++)
   137  01FF66  0E00               	movlw	0
   138  01FF68  6E04               	movwf	(main@i+1)^0,c
   139  01FF6A  0E00               	movlw	0
   140  01FF6C  6E03               	movwf	main@i^0,c
   141  01FF6E                     l42:
   142                           
   143                           ;SPI_Slave.c: 58:     {;SPI_Slave.c: 59:         PORTBbits.RB0=1;
   144  01FF6E  8081               	bsf	129,0,c	;volatile
   145  01FF70                     
   146                           ;SPI_Slave.c: 60:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   147  01FF70  0E0B               	movlw	11
   148  01FF72  6E02               	movwf	(??_main+1)^0,c
   149  01FF74  0E26               	movlw	38
   150  01FF76  6E01               	movwf	??_main^0,c
   151  01FF78  0E5E               	movlw	94
   152  01FF7A                     u67:
   153  01FF7A  2EE8               	decfsz	wreg,f,c
   154  01FF7C  D7FE               	bra	u67
   155  01FF7E  2E01               	decfsz	??_main^0,f,c
   156  01FF80  D7FC               	bra	u67
   157  01FF82  2E02               	decfsz	(??_main+1)^0,f,c
   158  01FF84  D7FA               	bra	u67
   159  01FF86                     
   160                           ;SPI_Slave.c: 61:         PORTBbits.RB0=0;
   161  01FF86  9081               	bcf	129,0,c	;volatile
   162                           
   163                           ;SPI_Slave.c: 62:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   164  01FF88  0E0B               	movlw	11
   165  01FF8A  6E02               	movwf	(??_main+1)^0,c
   166  01FF8C  0E26               	movlw	38
   167  01FF8E  6E01               	movwf	??_main^0,c
   168  01FF90  0E5E               	movlw	94
   169  01FF92                     u77:
   170  01FF92  2EE8               	decfsz	wreg,f,c
   171  01FF94  D7FE               	bra	u77
   172  01FF96  2E01               	decfsz	??_main^0,f,c
   173  01FF98  D7FC               	bra	u77
   174  01FF9A  2E02               	decfsz	(??_main+1)^0,f,c
   175  01FF9C  D7FA               	bra	u77
   176  01FF9E                     
   177                           ;SPI_Slave.c: 63:     }
   178  01FF9E  4A03               	infsnz	main@i^0,f,c
   179  01FFA0  2A04               	incf	(main@i+1)^0,f,c
   180  01FFA2  BE04               	btfsc	(main@i+1)^0,7,c
   181  01FFA4  EFDD  F0FF         	goto	u31
   182  01FFA8  5004               	movf	(main@i+1)^0,w,c
   183  01FFAA  E109               	bnz	u30
   184  01FFAC  0E02               	movlw	2
   185  01FFAE  5C03               	subwf	main@i^0,w,c
   186  01FFB0  A0D8               	btfss	status,0,c
   187  01FFB2  EFDD  F0FF         	goto	u31
   188  01FFB6  EFDF  F0FF         	goto	u30
   189  01FFBA                     u31:
   190  01FFBA  EFB7  F0FF         	goto	l42
   191  01FFBE                     u30:
   192  01FFBE                     l754:
   193                           
   194                           ;SPI_Slave.c: 65:     {;SPI_Slave.c: 67:         x = SPIS_Read();
   195  01FFBE  EC97  F0FF         	call	_SPIS_Read	;wreg free
   196  01FFC2  6E05               	movwf	main@x^0,c
   197  01FFC4                     
   198                           ;SPI_Slave.c: 68:         if(x =='a')
   199  01FFC4  0E61               	movlw	97
   200  01FFC6  1805               	xorwf	main@x^0,w,c
   201  01FFC8  A4D8               	btfss	status,2,c
   202  01FFCA  EFE9  F0FF         	goto	u41
   203  01FFCE  EFEB  F0FF         	goto	u40
   204  01FFD2                     u41:
   205  01FFD2  EFEE  F0FF         	goto	l760
   206  01FFD6                     u40:
   207  01FFD6                     
   208                           ;SPI_Slave.c: 69:         {;SPI_Slave.c: 70:             PORTBbits.RB0=1;
   209  01FFD6  8081               	bsf	129,0,c	;volatile
   210                           
   211                           ;SPI_Slave.c: 71:         }
   212  01FFD8  EFDF  F0FF         	goto	l754
   213  01FFDC                     l760:
   214  01FFDC  0E62               	movlw	98
   215  01FFDE  1805               	xorwf	main@x^0,w,c
   216  01FFE0  A4D8               	btfss	status,2,c
   217  01FFE2  EFF5  F0FF         	goto	u51
   218  01FFE6  EFF7  F0FF         	goto	u50
   219  01FFEA                     u51:
   220  01FFEA  EFDF  F0FF         	goto	l754
   221  01FFEE                     u50:
   222  01FFEE                     
   223                           ;SPI_Slave.c: 73:         {;SPI_Slave.c: 74:             PORTBbits.RB0=0;
   224  01FFEE  9081               	bcf	129,0,c	;volatile
   225  01FFF0  EFDF  F0FF         	goto	l754
   226  01FFF4  EF00  F000         	goto	start
   227  01FFF8                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _SPI_Init_Slave *****************
   231 ;; Defined at:
   232 ;;		line 14 in file "SPI_Slave.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		_main
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text1
   260  01FF44                     __ptext1:
   261                           	callstack 0
   262  01FF44                     _SPI_Init_Slave:
   263                           	callstack 30
   264  01FF44                     
   265                           ;SPI_Slave.c: 17:     TRISBbits.TRISB5 = 1;
   266  01FF44  8A93               	bsf	147,5,c	;volatile
   267                           
   268                           ;SPI_Slave.c: 18:     TRISBbits.TRISB4 = 1;
   269  01FF46  8893               	bsf	147,4,c	;volatile
   270                           
   271                           ;SPI_Slave.c: 19:     TRISAbits.TRISA5 = 1;
   272  01FF48  8A92               	bsf	146,5,c	;volatile
   273                           
   274                           ;SPI_Slave.c: 20:     TRISCbits.TRISC7 = 0;
   275  01FF4A  9E94               	bcf	148,7,c	;volatile
   276                           
   277                           ;SPI_Slave.c: 21:     TRISBbits.TRISB0 = 0;
   278  01FF4C  9093               	bcf	147,0,c	;volatile
   279  01FF4E                     
   280                           ;SPI_Slave.c: 25:     SSPSTAT=0x40;
   281  01FF4E  0E40               	movlw	64
   282  01FF50  6EC7               	movwf	199,c	;volatile
   283                           
   284                           ;SPI_Slave.c: 26:     SSPCON1=0b00110100;
   285  01FF52  0E34               	movlw	52
   286  01FF54  6EC6               	movwf	198,c	;volatile
   287  01FF56                     
   288                           ;SPI_Slave.c: 28:     PIR1bits.SSPIF=0;
   289  01FF56  969E               	bcf	158,3,c	;volatile
   290                           
   291                           ;SPI_Slave.c: 32:     ADCON0=0;
   292  01FF58  0E00               	movlw	0
   293  01FF5A  6EC2               	movwf	194,c	;volatile
   294                           
   295                           ;SPI_Slave.c: 34:     ADCON1=0x0F;
   296  01FF5C  0E0F               	movlw	15
   297  01FF5E  6EC1               	movwf	193,c	;volatile
   298  01FF60  0012               	return		;funcret
   299  01FF62                     __end_of_SPI_Init_Slave:
   300                           	callstack 0
   301                           
   302 ;; *************** function _SPIS_Read *****************
   303 ;; Defined at:
   304 ;;		line 46 in file "SPI_Slave.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      unsigned char 
   311 ;; Registers used:
   312 ;;		wreg, status,2
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels used:    1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text2
   332  01FF2E                     __ptext2:
   333                           	callstack 0
   334  01FF2E                     _SPIS_Read:
   335                           	callstack 30
   336  01FF2E                     
   337                           ;SPI_Slave.c: 48:     SSPBUF=0xff;
   338  01FF2E  68C9               	setf	201,c	;volatile
   339  01FF30                     l34:
   340  01FF30  A69E               	btfss	158,3,c	;volatile
   341  01FF32  EF9D  F0FF         	goto	u11
   342  01FF36  EF9F  F0FF         	goto	u10
   343  01FF3A                     u11:
   344  01FF3A  EF98  F0FF         	goto	l34
   345  01FF3E                     u10:
   346  01FF3E                     
   347                           ;SPI_Slave.c: 50:     PIR1bits.SSPIF=0;
   348  01FF3E  969E               	bcf	158,3,c	;volatile
   349  01FF40                     
   350                           ;SPI_Slave.c: 51:     return(SSPBUF);
   351  01FF40  50C9               	movf	201,w,c	;volatile
   352  01FF42  0012               	return		;funcret
   353  01FF44                     __end_of_SPIS_Read:
   354                           	callstack 0
   355  0000                     
   356                           	psect	rparam
   357  0000                     
   358                           	psect	config
   359                           
   360                           ;Config register CONFIG1L @ 0x1FFF8
   361                           ;	Watchdog Timer
   362                           ;	WDTEN = ON, Enabled
   363                           ;	PLL Prescaler Selection
   364                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   365                           ;	PLL Enable Configuration Bit
   366                           ;	CFGPLLEN = OFF, PLL Disabled
   367                           ;	Stack Overflow/Underflow Reset
   368                           ;	STVREN = ON, Enabled
   369                           ;	Extended Instruction Set
   370                           ;	XINST = OFF, Disabled
   371  1FFF8                     	org	131064
   372  1FFF8  BF                 	db	191
   373                           
   374                           ;Config register CONFIG1H @ 0x1FFF9
   375                           ;	CPU System Clock Postscaler
   376                           ;	CPUDIV = OSC1, No CPU system clock divide
   377                           ;	Code Protect
   378                           ;	CP0 = OFF, Program memory is not code-protected
   379  1FFF9                     	org	131065
   380  1FFF9  F7                 	db	247
   381                           
   382                           ;Config register CONFIG2L @ 0x1FFFA
   383                           ;	Oscillator
   384                           ;	OSC = ECPLL, EC+PLL (CLKO-RA6), USB-EC+PLL
   385                           ;	T1OSC/SOSC Power Selection Bits
   386                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   387                           ;	EC Clock Out Enable Bit
   388                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   389                           ;	Fail-Safe Clock Monitor
   390                           ;	FCMEN = ON, Enabled
   391                           ;	Internal External Oscillator Switch Over Mode
   392                           ;	IESO = ON, Enabled
   393  1FFFA                     	org	131066
   394  1FFFA  FF                 	db	255
   395                           
   396                           ;Config register CONFIG2H @ 0x1FFFB
   397                           ;	Watchdog Postscaler
   398                           ;	WDTPS = 32768, 1:32768
   399  1FFFB                     	org	131067
   400  1FFFB  FF                 	db	255
   401                           
   402                           ;Config register CONFIG3L @ 0x1FFFC
   403                           ;	DSWDT Clock Select
   404                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   405                           ;	RTCC Clock Select
   406                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   407                           ;	Deep Sleep BOR
   408                           ;	DSBOREN = ON, Enabled
   409                           ;	Deep Sleep Watchdog Timer
   410                           ;	DSWDTEN = ON, Enabled
   411                           ;	Deep Sleep Watchdog Postscaler
   412                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   413  1FFFC                     	org	131068
   414  1FFFC  FF                 	db	255
   415                           
   416                           ;Config register CONFIG3H @ 0x1FFFD
   417                           ;	IOLOCK One-Way Set Enable bit
   418                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   419                           ;	ADC 10 or 12 Bit Select
   420                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   421                           ;	MSSP address masking
   422                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   423  1FFFD                     	org	131069
   424  1FFFD  FB                 	db	251
   425                           
   426                           ;Config register CONFIG4L @ 0x1FFFE
   427                           ;	Write/Erase Protect Page Start/End Location
   428                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
   429                           ;	Write/Erase Protect Configuration Region
   430                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   431  1FFFE                     	org	131070
   432  1FFFE  FF                 	db	255
   433                           
   434                           ;Config register CONFIG4H @ 0x1FFFF
   435                           ;	Write Protect Disable bit
   436                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   437                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   438                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   439                           ;	Low Speed USB mode with 48 MHz system clock bit
   440                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   441  1FFFF                     	org	131071
   442  1FFFF  FB                 	db	251
   443                           tosu	equ	0xFFF
   444                           tosh	equ	0xFFE
   445                           tosl	equ	0xFFD
   446                           stkptr	equ	0xFFC
   447                           pclatu	equ	0xFFB
   448                           pclath	equ	0xFFA
   449                           pcl	equ	0xFF9
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           prodh	equ	0xFF4
   455                           prodl	equ	0xFF3
   456                           indf0	equ	0xFEF
   457                           postinc0	equ	0xFEE
   458                           postdec0	equ	0xFED
   459                           preinc0	equ	0xFEC
   460                           plusw0	equ	0xFEB
   461                           fsr0h	equ	0xFEA
   462                           fsr0l	equ	0xFE9
   463                           wreg	equ	0xFE8
   464                           indf1	equ	0xFE7
   465                           postinc1	equ	0xFE6
   466                           postdec1	equ	0xFE5
   467                           preinc1	equ	0xFE4
   468                           plusw1	equ	0xFE3
   469                           fsr1h	equ	0xFE2
   470                           fsr1l	equ	0xFE1
   471                           bsr	equ	0xFE0
   472                           indf2	equ	0xFDF
   473                           postinc2	equ	0xFDE
   474                           postdec2	equ	0xFDD
   475                           preinc2	equ	0xFDC
   476                           plusw2	equ	0xFDB
   477                           fsr2h	equ	0xFDA
   478                           fsr2l	equ	0xFD9
   479                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      60
                                              0 COMRAM     5     5      0
                          _SPIS_Read
                     _SPI_Init_Slave
 ---------------------------------------------------------------------------------
 (1) _SPI_Init_Slave                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPIS_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPIS_Read
   _SPI_Init_Slave

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 16:52:37 2021

                     l25 FF60                       l34 FF30                       l42 FF6E  
                     l36 FF3E                       l37 FF42                       u10 FF3E  
                     u11 FF3A                       u30 FFBE                       u31 FFBA  
                     u40 FFD6                       u41 FFD2                       u50 FFEE  
                     u51 FFEA                       u67 FF7A                       u77 FF92  
                    l730 FF56                      l732 FF2E                      l740 FF62  
                    l734 FF40                      l726 FF44                      l750 FF86  
                    l742 FF66                      l728 FF4E                      l760 FFDC  
                    l752 FF9E                      l762 FFEE                      l754 FFBE  
                    l756 FFC4                      l748 FF70                      l758 FFD6  
                    wreg 000FE8                     _main FF62   __end_of_SPI_Init_Slave FF62  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  main@i 0003                    main@x 0005       __size_of_SPIS_Read 0016  
                  status 000FD8          ?_SPI_Init_Slave 0001          __initialization FF28  
           __end_of_main FFF8                   ??_main 0001            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _SSPBUF 000FC9  
      __end_of_SPIS_Read FF44               __accesstop 0060  __end_of__initialization FF28  
          ___rparam_used 000001           __pcstackCOMRAM 0001         ??_SPI_Init_Slave 0001  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7                  __Hparam 0000  
                __Lparam 0000                  __pcinit FF28                  __ramtop 0F00  
                __ptext0 FF62                  __ptext1 FF44                  __ptext2 FF2E  
   end_of_initialization FF28                _PORTBbits 000F81                _SPIS_Read FF2E  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
             ?_SPIS_Read 0001      start_initialization FF28              ??_SPIS_Read 0001  
               _PIR1bits 000F9E                 __Hrparam 0000  __size_of_SPI_Init_Slave 001E  
               __Lrparam 0000            __size_of_main 0096           _SPI_Init_Slave FF44  
