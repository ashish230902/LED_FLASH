

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 25 11:11:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F27J53 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _RCREG	set	4015
    50  0000                     _RCSTAbits	set	4012
    51  0000                     _TXREG	set	4014
    52  0000                     _TXSTA1bits	set	4013
    53  0000                     _RCSTA1bits	set	4012
    54  0000                     _SPBRG	set	4016
    55  0000                     _TRISCbits	set	3988
    56  0000                     _RCIF	set	31989
    57  0000                     _TXIF	set	31988
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  01FF2C                     __pcinit:
    63                           	callstack 0
    64  01FF2C                     start_initialization:
    65                           	callstack 0
    66  01FF2C                     __initialization:
    67                           	callstack 0
    68  01FF2C                     end_of_initialization:
    69                           	callstack 0
    70  01FF2C                     __end_of__initialization:
    71                           	callstack 0
    72  01FF2C  0100               	movlb	0
    73  01FF2E  EFAB  F0FF         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackBANK0
    76  000060                     __pcstackBANK0:
    77                           	callstack 0
    78  000060                     main@rc_data:
    79                           	callstack 0
    80                           
    81                           ; 100 bytes @ 0x0
    82  000060                     	ds	100
    83  0000C4                     main@i:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x64
    87  0000C4                     	ds	2
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	callstack 0
    92  000001                     transmit_character@out:
    93                           	callstack 0
    94                           
    95                           ; 1 bytes @ 0x0
    96  000001                     	ds	1
    97  000002                     
    98                           ; 1 bytes @ 0x1
    99  000002                     	ds	1
   100                           
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 49 in file "UART.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;  rc_data       100    0[BANK0 ] unsigned char [100]
   111 ;;  i               2  100[BANK0 ] unsigned int 
   112 ;;  out             1    0        unsigned char 
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   123 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   125 ;;      Totals:         1     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   126 ;;Total ram usage:      103 bytes
   127 ;; Hardware stack levels required when called:    1
   128 ;; This function calls:
   129 ;;		_setting_registers
   130 ;;		_transmit_character
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  01FF56                     __ptext0:
   138                           	callstack 0
   139  01FF56                     _main:
   140                           	callstack 30
   141  01FF56                     
   142                           ;UART.c: 52: char out;;UART.c: 53: char rc_data[100];;UART.c: 54: unsigned int i;;UART.c
      +                          : 55: setting_registers();
   143  01FF56  EC99  F0FF         	call	_setting_registers	;wreg free
   144  01FF5A                     
   145                           ;UART.c: 57: for(i=0;;i++)
   146  01FF5A  0E00               	movlw	0
   147  01FF5C  0100               	movlb	0	; () banked
   148  01FF5E  6FC5               	movwf	(main@i+1)& (0+255),b
   149  01FF60  0E00               	movlw	0
   150  01FF62  6FC4               	movwf	main@i& (0+255),b
   151  01FF64                     l42:
   152  01FF64  AA9E               	btfss	3998,5,c	;volatile
   153  01FF66  EFB7  F0FF         	goto	u81
   154  01FF6A  EFB9  F0FF         	goto	u80
   155  01FF6E                     u81:
   156  01FF6E  EFB2  F0FF         	goto	l42
   157  01FF72                     u80:
   158  01FF72                     
   159                           ;UART.c: 60: rc_data[i]=RCREG;
   160  01FF72  0E60               	movlw	low main@rc_data
   161  01FF74  0100               	movlb	0	; () banked
   162  01FF76  25C4               	addwf	main@i& (0+255),w,b
   163  01FF78  6ED9               	movwf	fsr2l,c
   164  01FF7A  0E00               	movlw	high main@rc_data
   165  01FF7C  21C5               	addwfc	(main@i+1)& (0+255),w,b
   166  01FF7E  6EDA               	movwf	fsr2h,c
   167  01FF80  CFAF FFDF          	movff	4015,indf2	;volatile
   168                           
   169                           ;UART.c: 61: if(rc_data[i]=='\r')
   170  01FF84  0E60               	movlw	low main@rc_data
   171  01FF86  25C4               	addwf	main@i& (0+255),w,b
   172  01FF88  6ED9               	movwf	fsr2l,c
   173  01FF8A  0E00               	movlw	high main@rc_data
   174  01FF8C  21C5               	addwfc	(main@i+1)& (0+255),w,b
   175  01FF8E  6EDA               	movwf	fsr2h,c
   176  01FF90  0E0D               	movlw	13
   177  01FF92  18DE               	xorwf	postinc2,w,c
   178  01FF94  A4D8               	btfss	status,2,c
   179  01FF96  EFCF  F0FF         	goto	u91
   180  01FF9A  EFD1  F0FF         	goto	u90
   181  01FF9E                     u91:
   182  01FF9E  EFDB  F0FF         	goto	l787
   183  01FFA2                     u90:
   184  01FFA2                     
   185                           ; BSR set to: 0
   186                           ;UART.c: 62: {;UART.c: 63: rc_data[i]='\0';
   187  01FFA2  0E60               	movlw	low main@rc_data
   188  01FFA4  25C4               	addwf	main@i& (0+255),w,b
   189  01FFA6  6ED9               	movwf	fsr2l,c
   190  01FFA8  0E00               	movlw	high main@rc_data
   191  01FFAA  21C5               	addwfc	(main@i+1)& (0+255),w,b
   192  01FFAC  6EDA               	movwf	fsr2h,c
   193  01FFAE  0E00               	movlw	0
   194  01FFB0  6EDF               	movwf	indf2,c
   195                           
   196                           ;UART.c: 64: break;
   197  01FFB2  EFDF  F0FF         	goto	l789
   198  01FFB6                     l787:
   199                           
   200                           ; BSR set to: 0
   201                           ;UART.c: 66: }
   202  01FFB6  4BC4               	infsnz	main@i& (0+255),f,b
   203  01FFB8  2BC5               	incf	(main@i+1)& (0+255),f,b
   204  01FFBA  EFB2  F0FF         	goto	l42
   205  01FFBE                     l789:
   206                           
   207                           ; BSR set to: 0
   208                           ;UART.c: 67: for(i=0;i<100;i++)
   209  01FFBE  0E00               	movlw	0
   210  01FFC0  6FC5               	movwf	(main@i+1)& (0+255),b
   211  01FFC2  0E00               	movlw	0
   212  01FFC4  6FC4               	movwf	main@i& (0+255),b
   213  01FFC6                     l795:
   214                           
   215                           ; BSR set to: 0
   216                           ;UART.c: 68: { transmit_character(rc_data[i]);
   217  01FFC6  0E60               	movlw	low main@rc_data
   218  01FFC8  25C4               	addwf	main@i& (0+255),w,b
   219  01FFCA  6ED9               	movwf	fsr2l,c
   220  01FFCC  0E00               	movlw	high main@rc_data
   221  01FFCE  21C5               	addwfc	(main@i+1)& (0+255),w,b
   222  01FFD0  6EDA               	movwf	fsr2h,c
   223  01FFD2  50DF               	movf	indf2,w,c
   224  01FFD4  ECA0  F0FF         	call	_transmit_character
   225  01FFD8                     
   226                           ;UART.c: 69: }
   227  01FFD8  0100               	movlb	0	; () banked
   228  01FFDA  4BC4               	infsnz	main@i& (0+255),f,b
   229  01FFDC  2BC5               	incf	(main@i+1)& (0+255),f,b
   230  01FFDE                     
   231                           ; BSR set to: 0
   232  01FFDE  51C5               	movf	(main@i+1)& (0+255),w,b
   233  01FFE0  E109               	bnz	u100
   234  01FFE2  0E64               	movlw	100
   235  01FFE4  5DC4               	subwf	main@i& (0+255),w,b
   236  01FFE6  A0D8               	btfss	status,0,c
   237  01FFE8  EFF8  F0FF         	goto	u101
   238  01FFEC  EFFA  F0FF         	goto	u100
   239  01FFF0                     u101:
   240  01FFF0  EFE3  F0FF         	goto	l795
   241  01FFF4                     u100:
   242  01FFF4                     
   243                           ; BSR set to: 0
   244  01FFF4  EF00  F000         	goto	start
   245  01FFF8                     __end_of_main:
   246                           	callstack 0
   247                           
   248 ;; *************** function _transmit_character *****************
   249 ;; Defined at:
   250 ;;		line 28 in file "UART.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;  out             1    wreg     unsigned char 
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  out             1    0[COMRAM] unsigned char 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   268 ;;Total ram usage:        1 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text1
   278  01FF40                     __ptext1:
   279                           	callstack 0
   280  01FF40                     _transmit_character:
   281                           	callstack 30
   282                           
   283                           ; BSR set to: 0
   284                           ;incstack = 0
   285                           ;transmit_character@out stored from wreg
   286  01FF40  6E01               	movwf	transmit_character@out^0,c
   287  01FF42                     l26:
   288  01FF42  A89E               	btfss	3998,4,c	;volatile
   289  01FF44  EFA6  F0FF         	goto	u71
   290  01FF48  EFA8  F0FF         	goto	u70
   291  01FF4C                     u71:
   292  01FF4C  EFA1  F0FF         	goto	l26
   293  01FF50                     u70:
   294  01FF50                     
   295                           ;UART.c: 31: TXREG=out;
   296  01FF50  C001  FFAE         	movff	transmit_character@out,4014	;volatile
   297  01FF54  0012               	return		;funcret
   298  01FF56                     __end_of_transmit_character:
   299                           	callstack 0
   300                           
   301 ;; *************** function _setting_registers *****************
   302 ;; Defined at:
   303 ;;		line 16 in file "UART.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text2
   331  01FF32                     __ptext2:
   332                           	callstack 0
   333  01FF32                     _setting_registers:
   334                           	callstack 30
   335  01FF32                     
   336                           ;UART.c: 18:      TRISCbits.TRISC6 = 0;
   337  01FF32  9C94               	bcf	148,6,c	;volatile
   338                           
   339                           ;UART.c: 19:      TRISCbits.TRISC7 = 1;
   340  01FF34  8E94               	bsf	148,7,c	;volatile
   341  01FF36                     
   342                           ;UART.c: 21:      SPBRG = 12;
   343  01FF36  0E0C               	movlw	12
   344  01FF38  6EB0               	movwf	176,c	;volatile
   345  01FF3A                     
   346                           ;UART.c: 24:      RCSTA1bits.CREN = 1;
   347  01FF3A  88AC               	bsf	172,4,c	;volatile
   348  01FF3C                     
   349                           ;UART.c: 25:      TXSTA1bits.TXEN = 1;
   350  01FF3C  8AAD               	bsf	173,5,c	;volatile
   351  01FF3E  0012               	return		;funcret
   352  01FF40                     __end_of_setting_registers:
   353                           	callstack 0
   354  0000                     
   355                           	psect	rparam
   356  0000                     
   357                           	psect	config
   358                           
   359                           ;Config register CONFIG1L @ 0x1FFF8
   360                           ;	Watchdog Timer
   361                           ;	WDTEN = ON, Enabled
   362                           ;	PLL Prescaler Selection
   363                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   364                           ;	PLL Enable Configuration Bit
   365                           ;	CFGPLLEN = OFF, PLL Disabled
   366                           ;	Stack Overflow/Underflow Reset
   367                           ;	STVREN = ON, Enabled
   368                           ;	Extended Instruction Set
   369                           ;	XINST = OFF, Disabled
   370  1FFF8                     	org	131064
   371  1FFF8  BF                 	db	191
   372                           
   373                           ;Config register CONFIG1H @ 0x1FFF9
   374                           ;	CPU System Clock Postscaler
   375                           ;	CPUDIV = OSC1, No CPU system clock divide
   376                           ;	Code Protect
   377                           ;	CP0 = OFF, Program memory is not code-protected
   378  1FFF9                     	org	131065
   379  1FFF9  F7                 	db	247
   380                           
   381                           ;Config register CONFIG2L @ 0x1FFFA
   382                           ;	Oscillator
   383                           ;	OSC = ECPLL, EC+PLL (CLKO-RA6), USB-EC+PLL
   384                           ;	T1OSC/SOSC Power Selection Bits
   385                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   386                           ;	EC Clock Out Enable Bit
   387                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   388                           ;	Fail-Safe Clock Monitor
   389                           ;	FCMEN = ON, Enabled
   390                           ;	Internal External Oscillator Switch Over Mode
   391                           ;	IESO = ON, Enabled
   392  1FFFA                     	org	131066
   393  1FFFA  FF                 	db	255
   394                           
   395                           ;Config register CONFIG2H @ 0x1FFFB
   396                           ;	Watchdog Postscaler
   397                           ;	WDTPS = 32768, 1:32768
   398  1FFFB                     	org	131067
   399  1FFFB  FF                 	db	255
   400                           
   401                           ;Config register CONFIG3L @ 0x1FFFC
   402                           ;	DSWDT Clock Select
   403                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   404                           ;	RTCC Clock Select
   405                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   406                           ;	Deep Sleep BOR
   407                           ;	DSBOREN = ON, Enabled
   408                           ;	Deep Sleep Watchdog Timer
   409                           ;	DSWDTEN = ON, Enabled
   410                           ;	Deep Sleep Watchdog Postscaler
   411                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   412  1FFFC                     	org	131068
   413  1FFFC  FF                 	db	255
   414                           
   415                           ;Config register CONFIG3H @ 0x1FFFD
   416                           ;	IOLOCK One-Way Set Enable bit
   417                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   418                           ;	ADC 10 or 12 Bit Select
   419                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   420                           ;	MSSP address masking
   421                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   422  1FFFD                     	org	131069
   423  1FFFD  FB                 	db	251
   424                           
   425                           ;Config register CONFIG4L @ 0x1FFFE
   426                           ;	Write/Erase Protect Page Start/End Location
   427                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
   428                           ;	Write/Erase Protect Configuration Region
   429                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   430  1FFFE                     	org	131070
   431  1FFFE  FF                 	db	255
   432                           
   433                           ;Config register CONFIG4H @ 0x1FFFF
   434                           ;	Write Protect Disable bit
   435                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   436                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   437                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   438                           ;	Low Speed USB mode with 48 MHz system clock bit
   439                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   440  1FFFF                     	org	131071
   441  1FFFF  FB                 	db	251
   442                           tosu	equ	0xFFF
   443                           tosh	equ	0xFFE
   444                           tosl	equ	0xFFD
   445                           stkptr	equ	0xFFC
   446                           pclatu	equ	0xFFB
   447                           pclath	equ	0xFFA
   448                           pcl	equ	0xFF9
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           prodh	equ	0xFF4
   454                           prodl	equ	0xFF3
   455                           indf0	equ	0xFEF
   456                           postinc0	equ	0xFEE
   457                           postdec0	equ	0xFED
   458                           preinc0	equ	0xFEC
   459                           plusw0	equ	0xFEB
   460                           fsr0h	equ	0xFEA
   461                           fsr0l	equ	0xFE9
   462                           wreg	equ	0xFE8
   463                           indf1	equ	0xFE7
   464                           postinc1	equ	0xFE6
   465                           postdec1	equ	0xFE5
   466                           preinc1	equ	0xFE4
   467                           plusw1	equ	0xFE3
   468                           fsr1h	equ	0xFE2
   469                           fsr1l	equ	0xFE1
   470                           bsr	equ	0xFE0
   471                           indf2	equ	0xFDF
   472                           postinc2	equ	0xFDE
   473                           postdec2	equ	0xFDD
   474                           preinc2	equ	0xFDC
   475                           plusw2	equ	0xFDB
   476                           fsr2h	equ	0xFDA
   477                           fsr2l	equ	0xFD9
   478                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160    102     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_transmit_character

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0     252
                                              1 COMRAM     1     1      0
                                              0 BANK0    102   102      0
                  _setting_registers
                 _transmit_character
 ---------------------------------------------------------------------------------
 (1) _transmit_character                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setting_registers                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setting_registers
   _transmit_character

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      66       5       63.7%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 25 11:11:09 2021

        ?_transmit_character 0001                           l23 FF3E                           l26 FF42  
                         l42 FF64                           l29 FF54                           l49 FFF4  
                         u70 FF50                           u71 FF4C                           u80 FF72  
                         u81 FF6E                           u90 FFA2                           u91 FF9E  
                        l771 FF3A                          l773 FF3C                          l781 FF5A  
                        l767 FF32                          l775 FF42                          l783 FF72  
                        l769 FF36                          l777 FF50                          l785 FFA2  
                        l795 FFC6                          l787 FFB6                          l779 FF56  
                        l797 FFD8                          l789 FFBE                          l799 FFDE  
                        u100 FFF4                          u101 FFF0                   _TXSTA1bits 000FAD  
       ??_transmit_character 0001                         _RCIF 007CF5                  main@rc_data 0060  
                       _TXIF 007CF4                         _main FF56                         indf2 000FDF  
                       fsr2l 000FD9                         start 0000                 ___param_bank 000000  
                      ?_main 0001                        _RCREG 000FAF                        _SPBRG 000FB0  
                      _TXREG 000FAE                        main@i 00C4                        status 000FD8  
            __initialization FF2C                 __end_of_main FFF8                       ??_main 0002  
              __activetblptr 000000                   __accesstop 0060      __end_of__initialization FF2C  
              ___rparam_used 000001               __pcstackCOMRAM 0001  __size_of_transmit_character 0016  
                    __Hparam 0000                      __Lparam 0000                      __pcinit FF2C  
                    __ramtop 0F00                      __ptext0 FF56                      __ptext1 FF40  
                    __ptext2 FF32         end_of_initialization FF2C                    _RCSTAbits 000FAC  
                    postinc2 000FDE                    _TRISCbits 000F94          start_initialization FF2C  
          _setting_registers FF32           ?_setting_registers 0001          ??_setting_registers 0001  
  __end_of_setting_registers FF40                __pcstackBANK0 0060   __end_of_transmit_character FF56  
 __size_of_setting_registers 000E                     __Hrparam 0000                     __Lrparam 0000  
              __size_of_main 00A2                   _RCSTA1bits 000FAC        transmit_character@out 0001  
         _transmit_character FF40  
